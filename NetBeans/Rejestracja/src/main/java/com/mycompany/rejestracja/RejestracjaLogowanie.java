/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.rejestracja;

import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JOptionPane;

/**
 *
 * @author inscr
 */
public class RejestracjaLogowanie extends javax.swing.JFrame {

    /**
     * Creates new form RejestracjaLogowanie
     */
    public RejestracjaLogowanie() {
        initComponents();
        addKeyListenerTojTFEmail();
        addKeyListenerTojPFPHasloRejestracja();
        addKeyListenerTojPFHaslo();
        addKeyListenerTojPFHasloRejestracja();
        addKeyListenerTojTFEmailRejestracja();
        addKeyListenerTojTFLoginRejestracja();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPLogowanie = new javax.swing.JPanel();
        jLLogowanie = new javax.swing.JLabel();
        jLEmail = new javax.swing.JLabel();
        jTFEmail = new javax.swing.JTextField();
        jLHaslo = new javax.swing.JLabel();
        jBZaloguj = new javax.swing.JButton();
        jPFHaslo = new javax.swing.JPasswordField();
        jPRejestracja = new javax.swing.JPanel();
        jLRejestracja = new javax.swing.JLabel();
        jLLoginRejestracja = new javax.swing.JLabel();
        jTFLoginRejestracja = new javax.swing.JTextField();
        jLEmailRejestracja = new javax.swing.JLabel();
        jTFEmailRejestracja = new javax.swing.JTextField();
        jLHasloRejestracja = new javax.swing.JLabel();
        jLPHaslo = new javax.swing.JLabel();
        jBZarejestruj = new javax.swing.JButton();
        jPFHasloRejestracja = new javax.swing.JPasswordField();
        jPFPHasloRejestracja = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setBackground(new java.awt.Color(153, 153, 153));

        jPLogowanie.setBackground(new java.awt.Color(153, 153, 153));

        jLLogowanie.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLLogowanie.setText("Logowanie");

        jLEmail.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLEmail.setText("E-MAIL");

        jTFEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFEmailActionPerformed(evt);
            }
        });

        jLHaslo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLHaslo.setText("HASLO");

        jBZaloguj.setText("ZALOGUJ");

        javax.swing.GroupLayout jPLogowanieLayout = new javax.swing.GroupLayout(jPLogowanie);
        jPLogowanie.setLayout(jPLogowanieLayout);
        jPLogowanieLayout.setHorizontalGroup(
            jPLogowanieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPLogowanieLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPLogowanieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLLogowanie)
                    .addComponent(jLEmail)
                    .addComponent(jTFEmail)
                    .addComponent(jLHaslo)
                    .addComponent(jBZaloguj, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPFHaslo, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE))
                .addContainerGap(155, Short.MAX_VALUE))
        );
        jPLogowanieLayout.setVerticalGroup(
            jPLogowanieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPLogowanieLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLLogowanie)
                .addGap(34, 34, 34)
                .addComponent(jLEmail)
                .addGap(18, 18, 18)
                .addComponent(jTFEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLHaslo)
                .addGap(18, 18, 18)
                .addComponent(jPFHaslo, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(jBZaloguj)
                .addContainerGap(106, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Logowanie", jPLogowanie);

        jPRejestracja.setBackground(new java.awt.Color(153, 153, 153));

        jLRejestracja.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLRejestracja.setText("Rejestracja");

        jLLoginRejestracja.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLLoginRejestracja.setText("Login");

        jLEmailRejestracja.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLEmailRejestracja.setText("E - mail");

        jLHasloRejestracja.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLHasloRejestracja.setText("Haslo");

        jLPHaslo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLPHaslo.setText("Potwierdz haslo");

        jBZarejestruj.setText("zarejestruj");
        jBZarejestruj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBZarejestrujActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPRejestracjaLayout = new javax.swing.GroupLayout(jPRejestracja);
        jPRejestracja.setLayout(jPRejestracjaLayout);
        jPRejestracjaLayout.setHorizontalGroup(
            jPRejestracjaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPRejestracjaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPRejestracjaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLRejestracja)
                    .addComponent(jLLoginRejestracja)
                    .addComponent(jTFLoginRejestracja)
                    .addComponent(jLEmailRejestracja)
                    .addComponent(jTFEmailRejestracja)
                    .addComponent(jLHasloRejestracja)
                    .addComponent(jLPHaslo)
                    .addComponent(jPFHasloRejestracja)
                    .addComponent(jPFPHasloRejestracja, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(jBZarejestruj, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPRejestracjaLayout.setVerticalGroup(
            jPRejestracjaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPRejestracjaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPRejestracjaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPRejestracjaLayout.createSequentialGroup()
                        .addComponent(jLRejestracja)
                        .addGap(18, 18, 18)
                        .addComponent(jLLoginRejestracja)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTFLoginRejestracja, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLEmailRejestracja)
                        .addGap(18, 18, 18)
                        .addComponent(jTFEmailRejestracja, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLHasloRejestracja)
                        .addGap(18, 18, 18)
                        .addComponent(jPFHasloRejestracja, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLPHaslo)
                        .addGap(18, 18, 18)
                        .addComponent(jPFPHasloRejestracja, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 26, Short.MAX_VALUE))
                    .addComponent(jBZarejestruj, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Rejestracja", jPRejestracja);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTFEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFEmailActionPerformed

    private void jBZarejestrujActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBZarejestrujActionPerformed
        
        char[] haslo = jPFHasloRejestracja.getPassword();
        char[] potwierdzenie = jPFPHasloRejestracja.getPassword();
        
        if(potwierdzenie.equals(haslo)){
            JOptionPane.showMessageDialog(null, "Rejestracja powiodła się");
            String login = jTFLoginRejestracja.getText();
            String email = jTFEmailRejestracja.getText();
            char[] password = jPFHasloRejestracja.getPassword();

            String wynik = (""+login+";"+email+";"+password+"\n");
            File f = new File("sekretnehasla.csv");

            try{
                FileWriter fw = new FileWriter(f,false);
                fw.write(wynik+"\n");
                fw.close();
            }catch(IOException e){
                System.out.println("BŁĄD: "+e.toString());
            }
        }else if(haslo.length() < 4){
            JOptionPane.showMessageDialog(null, "Hasło ma mniej niż 4 znaki");
        }else{
            JOptionPane.showMessageDialog(null, "Hasła różnią się od siebie");
            
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jBZarejestrujActionPerformed

    private void addKeyListenerTojTFEmail(){
        jTFEmail.addKeyListener(new KeyListener() {
            @Override
            public void keyTyped(KeyEvent e) {
                String temp = jTFEmail.getText();
                char ch = e.getKeyChar();
                if(  (ch == '@' || ch >= 'a' && ch <= 'z') || ch == KeyEvent.VK_BACK_SPACE ){
                    jTFEmail.setEditable(true);
                }else{
                    jTFEmail.setEditable(false);
                }
                if(temp.contains("@")){
                   if(ch >= 'a' && ch <= 'z' || ch == '.' || ch == KeyEvent.VK_BACK_SPACE){
                        jTFEmail.setEditable(true);
                    }
                }
            }

            @Override
            public void keyPressed(KeyEvent e) {
                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void keyReleased(KeyEvent e) {
                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }
        });
    }
    
    private void addKeyListenerTojPFPHasloRejestracja(){
        jPFPHasloRejestracja.addKeyListener(new KeyListener() {
            @Override
            public void keyTyped(KeyEvent e) {
                char ch = e.getKeyChar();
                
                if(ch >= 'a' && ch <= 'z' || ch >= '0'  && ch <= '9'){
                    jPFPHasloRejestracja.setEditable(true);
                }else{
                    jPFPHasloRejestracja.setEditable(false);
                }
            }

            @Override
            public void keyPressed(KeyEvent e) {
                
            }

            @Override
            public void keyReleased(KeyEvent e) {
                
            }
        });
    }
    
    private void addKeyListenerTojPFHaslo(){
        jPFHaslo.addKeyListener(new KeyListener() {
            @Override
            public void keyTyped(KeyEvent e) {
                char ch = e.getKeyChar();
                
                if(ch >= 'a' && ch <= 'z' || ch >= '0'  && ch <= '9'){
                    jPFHaslo.setEditable(true);
                }else{
                    jPFHaslo.setEditable(false);
                }
            }

            @Override
            public void keyPressed(KeyEvent e) {
                
            }

            @Override
            public void keyReleased(KeyEvent e) {
                
            }
        });
    }
    
    private void addKeyListenerTojPFHasloRejestracja(){
        jPFHasloRejestracja.addKeyListener(new KeyListener() {
            @Override
            public void keyTyped(KeyEvent e) {
                char ch = e.getKeyChar();
                
                if(ch >= 'a' && ch <= 'z' || ch >= '0'  && ch <= '9'){
                    jPFHasloRejestracja.setEditable(true);
                }else{
                    jPFHasloRejestracja.setEditable(false);
                }
            }

            @Override
            public void keyPressed(KeyEvent e) {
                
            }

            @Override
            public void keyReleased(KeyEvent e) {
                
            }
        });
    }
    
    private void addKeyListenerTojTFEmailRejestracja(){
        jTFEmailRejestracja.addKeyListener(new KeyListener() {
            @Override
            public void keyTyped(KeyEvent e) {
                
                String temp = jTFEmailRejestracja.getText();
                char ch = e.getKeyChar();
                if(  (ch == '@' || ch >= 'a' && ch <= 'z') || ch == KeyEvent.VK_BACK_SPACE ){
                    jTFEmailRejestracja.setEditable(true);
                }else{
                    jTFEmailRejestracja.setEditable(false);
                }
                if(temp.contains("@")){
                   if(ch >= 'a' && ch <= 'z' || ch == '.' || ch == KeyEvent.VK_BACK_SPACE){
                        jTFEmailRejestracja.setEditable(true);
                    }
                }
                
            }

            @Override
            public void keyPressed(KeyEvent e) {
                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void keyReleased(KeyEvent e) {
                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }
        });
    }
    
    private void addKeyListenerTojTFLoginRejestracja(){
        jTFLoginRejestracja.addKeyListener(new KeyListener() {
            @Override
            public void keyTyped(KeyEvent e) {
                String temp = jTFLoginRejestracja.getText();
                char ch = e.getKeyChar();
                if((ch >= 'a' && ch <= 'z' || ch == KeyEvent.VK_BACK_SPACE ) 
                   && (temp.length() <=19 || ch == KeyEvent.VK_BACK_SPACE  )) {
                    jTFLoginRejestracja.setEditable(true);
                }else{
                    jTFLoginRejestracja.setEditable(false);
                }
            }

            @Override
            public void keyPressed(KeyEvent e) {
                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void keyReleased(KeyEvent e) {
                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }
        });
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RejestracjaLogowanie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RejestracjaLogowanie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RejestracjaLogowanie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RejestracjaLogowanie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RejestracjaLogowanie().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBZaloguj;
    private javax.swing.JButton jBZarejestruj;
    private javax.swing.JLabel jLEmail;
    private javax.swing.JLabel jLEmailRejestracja;
    private javax.swing.JLabel jLHaslo;
    private javax.swing.JLabel jLHasloRejestracja;
    private javax.swing.JLabel jLLoginRejestracja;
    private javax.swing.JLabel jLLogowanie;
    private javax.swing.JLabel jLPHaslo;
    private javax.swing.JLabel jLRejestracja;
    private javax.swing.JPasswordField jPFHaslo;
    private javax.swing.JPasswordField jPFHasloRejestracja;
    private javax.swing.JPasswordField jPFPHasloRejestracja;
    private javax.swing.JPanel jPLogowanie;
    private javax.swing.JPanel jPRejestracja;
    private javax.swing.JTextField jTFEmail;
    private javax.swing.JTextField jTFEmailRejestracja;
    private javax.swing.JTextField jTFLoginRejestracja;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables
}
